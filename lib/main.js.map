{"version":3,"file":"main.js","sources":["../node_modules/@atxm/developer-console/lib/index.js","../src/log.ts","../src/util.ts","../src/main.ts","../src/commands.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\n\nvar DeveloperConsole = /** @class */ (function () {\n    function DeveloperConsole(options) {\n        if (options === void 0) { options = {}; }\n        this.name = options.name;\n        this.styleSheet = \"\\n      background-color: \" + (options.backgroundColor || 'darkgrey') + \";\\n      border-radius: 2px;\\n      color: \" + (options.color || 'white') + \";\\n      line-height: 1.5;\\n      padding: 1px 4px;\\n      text-shadow: 0 1px 0px rgba(0, 0, 0, 0.2);\\n    \";\n    }\n    DeveloperConsole.prototype.__console__ = function (type) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (!(atom === null || atom === void 0 ? void 0 : atom.inDevMode()))\n            return;\n        args.unshift(\"%c\" + this.name + \"%c\", this.styleSheet, '');\n        (_a = window.console)[type].apply(_a, args);\n    };\n    DeveloperConsole.prototype.debug = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        this.__console__.apply(this, __spreadArray(['debug'], data));\n    };\n    DeveloperConsole.prototype.error = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        this.__console__.apply(this, __spreadArray(['error'], data));\n    };\n    DeveloperConsole.prototype.info = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        this.__console__.apply(this, __spreadArray(['info'], data));\n    };\n    DeveloperConsole.prototype.log = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        this.__console__.apply(this, __spreadArray(['log'], data));\n    };\n    DeveloperConsole.prototype.trace = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        this.__console__.apply(this, __spreadArray(['trace'], data));\n    };\n    DeveloperConsole.prototype.warn = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        this.__console__.apply(this, __spreadArray(['warn'], data));\n    };\n    return DeveloperConsole;\n}());\n\nexport default DeveloperConsole;\n","import meta from '../package.json';\nimport DeveloperConsole from '@atxm/developer-console';\n\nexport default new DeveloperConsole({\n  name: meta.name,\n  backgroundColor: 'cadetblue'\n});\n","import Logger from './log';\n\nfunction getPaths(): readonly string[] {\n  const projectPaths = atom.project.getPaths();\n\n  if (projectPaths?.length) {\n    Logger.log('Found project paths');\n    return projectPaths;\n  }\n\n  const editorPath = atom.workspace.getActiveTextEditor()?.getPath();\n\n  if (editorPath?.length) {\n    Logger.log('Found text editor path');\n    return [ editorPath ];\n  }\n\n  Logger.warn('No paths founds');\n  return [];\n}\n\nexport {\n  getPaths\n};\n","import { CompositeDisposable } from 'atom';\nimport { openDevMode, toggleDevMode } from './commands';\nimport Logger from './log';\n\nconst OpenInDeveloperMode = {\n  subscriptions: new CompositeDisposable(),\n\n  activate(): void {\n    Logger.log('Activating package');\n\n    this.subscriptions.add(\n      atom.commands.add(\"atom-workspace\", {\n        'open-in-developer-mode:open': () => {\n          openDevMode();\n        }\n      }),\n      atom.commands.add(\"atom-workspace\", {\n        'open-in-developer-mode:toggle': () => {\n          toggleDevMode();\n        }\n      })\n    );\n  },\n\n  deactivate(): void {\n    Logger.log('Deactivating package');\n\n    this.subscriptions?.dispose();\n  }\n};\n\nexport default OpenInDeveloperMode;\n","\nimport { getPaths } from './util';\nimport Logger from './log';\n\nfunction openDevMode(): void {\n  if (atom.inDevMode()) {\n    atom.notifications.addInfo(\"You're already in Developer Mode\", {\n      dismissable: false\n    });\n\n    return;\n  }\n\n  const pathsToOpen = getPaths();\n  Logger.log('Opening paths developer mode', pathsToOpen);\n\n  return atom.open({\n    pathsToOpen: pathsToOpen,\n    newWindow: false,\n    devMode: true\n  });\n}\n\nfunction toggleDevMode(): void {\n  const pathsToOpen = getPaths();\n\n  if (!pathsToOpen?.length) {\n    atom.commands.dispatch(atom.views.getView(atom.workspace), 'application:open-dev');\n    return;\n  }\n\n  Logger.log(`Opening paths ${!atom.inDevMode() ? 'normal' : 'developer'} mode`, pathsToOpen);\n\n  atom.open({\n    pathsToOpen: pathsToOpen,\n    newWindow: false,\n    devMode: !atom.inDevMode()\n  });\n\n  // return atom.close();\n}\n\nexport {\n  openDevMode,\n  toggleDevMode\n};\n"],"names":["__spreadArray","to","from","i","il","length","j","DeveloperConsole","options","name","styleSheet","backgroundColor","color","prototype","__console__","type","_a","args","_i","arguments","atom","inDevMode","unshift","this","window","console","apply","debug","data","error","info","log","trace","warn","meta","getPaths","projectPaths","project","Logger","editorPath","workspace","getActiveTextEditor","getPath","OpenInDeveloperMode","subscriptions","CompositeDisposable","activate","add","commands","pathsToOpen","open","newWindow","devMode","notifications","addInfo","dismissable","openDevMode","dispatch","views","getView","deactivate","dispose"],"mappings":"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"}